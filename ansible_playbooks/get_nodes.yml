---
- name: Get EC2 nodes for ubuntu based ami
  hosts: localhost
  gather_facts: no
  vars:
    terraform_dir: "/home/dxs01/finalSolution/terraform"
    temp_inventory: "/home/dxs01/finalSolution/ansible_playbooks/inventory"
    ec2_user: ubuntu
  tasks:
    - name: Fetch Terraform output
      command: terraform output -json
      args:
        chdir: "{{ terraform_dir }}"
      register: tf_output

    - name: Set public IP fact
      set_fact:
        ec2_host: "{{ tf_output.stdout | from_json | json_query('instance_public_ip.value') }}"
      when: tf_output.stdout != "{}"

    - name: Fail if public IP is not set
      fail:
        msg: "Public IP not found in Terraform output."
      when: ec2_host == ""

    - name: Save ec2_host as a global fact
      set_fact:
        ansible_global_host: "{{ ec2_host }}"

    - name: Create temporary inventory file
      copy:
        content: |
          [ec2_node]
          {{ ec2_host }} ansible_user=ubuntu ansible_ssh_private_key_file=/home/dxs01/finalSolution/terraform/my_key_pair.pem
        dest: "{{ temp_inventory }}"

- name: Edit Kubernetes manifests for new EC2 ec2_host
  hosts: localhost
  gather_facts: no
  vars:
    ingress_template: "/home/dxs01/finalSolution/k8s/ingress.yml.j2"
    ingress_manifest: "/home/dxs01/finalSolution/k8s/ingress.yml"
    service_manifest: "/home/dxs01/finalSolution/k8s/service.yml"
    service_template: "/home/dxs01/finalSolution/k8s/service.yml.j2"
    terraform_dir: "/home/dxs01/finalSolution/terraform"

  tasks:
    - name: Fetch Terraform output
      command: terraform output -json
      args:
        chdir: "{{ terraform_dir }}"
      register: tf_output

    - name: Set public DNS fact
      set_fact:
        ec2_host: "{{ tf_output.stdout | from_json | json_query('instance_public_dns.value') }}"
      when: tf_output.stdout != "{}"

    - name: Fail if public DNS is not set
      fail:
        msg: "Public DNS not found in Terraform output."
      when: ec2_host == ""

    - name: Generate ingress manifest from template
      template:
        src: "{{ ingress_template }}"
        dest: "{{ ingress_manifest }}"
      vars:
        PUBLIC_IP: "{{ ec2_host }}"

    - name: Generate sevice manifest from template
      template:
        src: "{{ service_template }}"
        dest: "{{ service_manifest }}"
      vars:
        public_ip: "{{ ec2_host }}"
