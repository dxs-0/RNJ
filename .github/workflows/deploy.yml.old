name: Deploy to Kubernetes

on:
  push:
    branches: [main, Testing]

permissions:
  actions: write
  contents: read

jobs:
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download public IP from S3
        run: |
          aws s3 cp s3://rnj-bucket/terraform_outputs.json ./terraform_outputs.json

      - name: Read the public IP
        run: |
          export PUBLIC_IP=$(jq -r '.instance_public_ip.value' terraform_outputs.json)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Replace Public IP in Ingress Manifest
        run: |
          sed -i "s/\${PUBLIC_IP}/$PUBLIC_IP/g" k8s/ingress.yml

      # Make sure kubectl setup is done before using it
      - name: Test
        run: |
          mkdir $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
          sed -i "s/127.0.0.1:6443/$PUBLIC_IP:6443/g" $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          export KUBECONFIG=$HOME/.kube/config
          echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

      - name: Update Kubeconf API
        run: |
          sed -i "s/127.0.0.1:6443/$PUBLIC_IP:6443/g" $HOME/.kube/config

      - name: Configure kubectl to skip TLS verification
        run: |
          kubectl config set-cluster my-cluster --server=https://$PUBLIC_IP:6443 --insecure-skip-tls-verify=true
          kubectl config set-context my-context --cluster=my-cluster --user=my-user
          kubectl config use-context my-context
          kubectl create namespace rn-jesus
        env:
          PUBLIC_IP: ${{ env.PUBLIC_IP }}

      - name: Set up Kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Deploy to the Kubernetes cluster
        run: kubectl apply -f k8s/

      - name: Deploy to the Kubernetes cluster
        uses: azure/k8s-deploy@v5
        with:
          action: deploy
          manifests: k8s/
          images: |
            dxs01/rn_jesus:${{ github.sha  }}
          imagepullsecrets: |
            DOCKER_PASSWORD
